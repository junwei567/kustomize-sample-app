apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-pipeline
spec:

  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: maven-local-repo
  
  params:
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: tag-name
      type: string
      description: The git tag to clone. e.g. main
    - name: environment
      type: string

  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.tag-name)
        - name: deleteExisting
          value: "true"

    - name: maven-run
      taskRef:
        name: maven
      runAfter:
        - fetch-repository
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
        - name: maven-local-repo
          workspace: maven-local-repo
      params:
        - name: CONTEXT_DIR
          value: "app"
        - name: GOALS
          value: 
            - -DskipTests
            - clean
            - package

    - name: build
      taskRef:
        name: buildah
      runAfter:
        - maven-run
      params:
        - name: IMAGE
          value: image-registry.openshift-image-registry.svc:5000/sample-pipeline/kustomize-demo-app:$(params.tag-name)
        - name: TLSVERIFY
          value: "false"
        - name: DOCKERFILE
          value: "/workspace/source/app/Containerfile"
        - name: CONTEXT
          value: "app"
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: deploy
      taskRef:
        name: openshift-client
      runAfter:
        - build
      params:
        - name: SCRIPT
          value: |
            oc apply -k overlays/$(params.environment)
            oc wait --for=condition=available --timeout=600s deployment/$(params.environment)-the-deployment
            echo "-----------Displaying all the pods-----------"
            oc get pods
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace